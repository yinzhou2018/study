/* 计算器的最简版本1.0：基于更多的非终结符号来指定操作符号优先级*/
%{
#include <stdio.h>
#include <stdlib.h>
#include "../fb.h"
%}

%union {
  struct ast *a; 
  double d;
}
%token <d> NUMBER 
%token EOL
%type <a> exp factor term

%%
calclist: /* 空规则*/
| calclist exp EOL {
    printf(" = %4.4g\n", eval($2));
    treefree($2);
    printf("> ");
  }
| calclist EOL { printf("> "); }
;

exp: exp '+' factor { $$ = newast('+', $1, $3); }
| exp '-' factor { $$ = newast('-', $1, $3); }
| factor
;

factor: term
| factor '*' term { $$ = newast('*', $1, $3); }
| factor '/' term { $$ = newast('/', $1, $3);} 
;

term: NUMBER  {$$ = newnum($1);}
| '|' term { $$ = newast('|', $2, NULL); }
| '+' term { $$ = newast('P', $2, NULL); }
| '-' term { $$ = newast('M', $2, NULL); }
| '(' exp ')' { $$ = $2; };
%%